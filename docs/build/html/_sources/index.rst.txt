pytket
======

.. image:: CQCLogo.png
   :width: 120px
   :align: right

``pytket`` is a python module for interfacing with `CQC`_ t|ket>, a set of
quantum programming tools. We currently support circuits and device
architectures from Google `Cirq`_, IBM `Qiskit`_, `AQT`_, `Honeywell`_,
`QSharp`_, `Pyzx`_, `ProjectQ`_ and Rigetti `pyQuil`_, allowing the t|ket> tools
to be used in conjunction with projects on these platforms.

Getting Started
~~~~~~~~~~~~~~~

``pytket`` is available for Python 3.6, 3.7 and 3.8, on Linux and MacOS.
To install, run

``pip install pytket``

Note: attempting to install from source will not set up the required
binaries for the t|ket> compiler, so we recommend the PyPI installation.

See the `Getting Started`_ page for a quick introduction to using
``pytket``.

To get more in depth on features, see the `examples`_.

Interfaces
~~~~~~~~~~

To use pytket in conjunction with other platforms you must download an
additional separate module for each. This can be done from pip, or from
source, as they binaries are included with the core ``pytket`` package.

For each subpackage:

Qiskit: ``pip install pytket-qiskit``

Cirq: ``pip install pytket-cirq``

PyQuil: ``pip install pytket-pyquil``

ProjectQ: ``pip install pytket-projectq``

AQT: ``pip install pytket-aqt``

Honeywell: ``pip install pytket-honeywell``

QSharp: ``pip install pytket-qsharp``

PyZX: ``pip install pytket-pyzx``

LICENCE
~~~~~~~

Copyright 2020 Cambridge Quantum Computing

Licensed under a Non-Commercial Use Software Licence (the "Licence");
you may not use this product except in compliance with the Licence.
You may view a copy of the Licence on the `LICENCE`_ page.

Unless required by applicable law or agreed to in writing, software
distributed under the Licence is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and
limitations under the Licence, but note it is strictly for non-commercial use.

.. _Cirq: https://www.github.com/quantumlib/cirq
.. _Qiskit: https://qiskit.org
.. _AQT: https://www.aqt.eu/services/
.. _Honeywell: https://www.honeywell.com/en-us/company/quantum
.. _QSharp: https://docs.microsoft.com/en-us/quantum/
.. _Pyzx: https://github.com/Quantomatic/pyzx
.. _ProjectQ: https://github.com/ProjectQ-Framework/ProjectQ
.. _pyQuil: http://rigetti.com/forest
.. _Getting Started: getting_started.html
.. _examples: https://github.com/CQCL/pytket/blob/master/examples
.. _source: https://github.com/Quantomatic/pyzx
.. _LICENCE: licence.html
.. _CQC: https://cambridgequantum.com

.. |PyPI version| image:: https://badge.fury.io/py/pytket.svg
   :target: https://badge.fury.io/py/pytket
.. |Documentation Status| image:: https://readthedocs.org/projects/pytket/badge/?version=latest
   :target: https://pytket.readthedocs.io/en/latest/?badge=latest
.. toctree::
    :caption: Contents:
    :maxdepth: 1

    getting_started.rst
    changelog.rst
    install.rst
    licence.rst
    opensource.rst

.. toctree::
    :caption: API Reference:
    :maxdepth: 2

    backends.rst
    circuit.rst
    device.rst
    passes.rst
    predicates.rst
    program.rst
    partition.rst
    qasm.rst
    quipper.rst
    routing.rst
    transform.rst
    utils.rst
    logging.rst
    cirq.rst
    projectq.rst
    pyquil.rst
    pyzx.rst
    qiskit.rst

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
